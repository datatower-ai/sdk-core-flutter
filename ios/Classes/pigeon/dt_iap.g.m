// Autogenerated from Pigeon (v18.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import "dt_iap.g.h"

#if TARGET_OS_OSX
#import <FlutterMacOS/FlutterMacOS.h>
#else
#import <Flutter/Flutter.h>
#endif

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSArray *wrapResult(id result, FlutterError *error) {
  if (error) {
    return @[
      error.code ?: [NSNull null], error.message ?: [NSNull null], error.details ?: [NSNull null]
    ];
  }
  return @[ result ?: [NSNull null] ];
}

static id GetNullableObjectAtIndex(NSArray *array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}

NSObject<FlutterMessageCodec> *DTDTIapPigeonGetCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  sSharedObject = [FlutterStandardMessageCodec sharedInstance];
  return sSharedObject;
}

void SetUpDTDTIapPigeon(id<FlutterBinaryMessenger> binaryMessenger, NSObject<DTDTIapPigeon> *api) {
  SetUpDTDTIapPigeonWithSuffix(binaryMessenger, api, @"");
}

void SetUpDTDTIapPigeonWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<DTDTIapPigeon> *api, NSString *messageChannelSuffix) {
  messageChannelSuffix = messageChannelSuffix.length > 0 ? [NSString stringWithFormat: @".%@", messageChannelSuffix] : @"";
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:[NSString stringWithFormat:@"%@%@", @"dev.flutter.pigeon.datatower_ai_core.DTIapPigeon.reportPurchaseSuccessAndroid", messageChannelSuffix]
        binaryMessenger:binaryMessenger
        codec:DTDTIapPigeonGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(reportPurchaseSuccessAndroidOrder:sku:price:currency:properties:error:)], @"DTDTIapPigeon api (%@) doesn't respond to @selector(reportPurchaseSuccessAndroidOrder:sku:price:currency:properties:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_order = GetNullableObjectAtIndex(args, 0);
        NSString *arg_sku = GetNullableObjectAtIndex(args, 1);
        double arg_price = [GetNullableObjectAtIndex(args, 2) doubleValue];
        NSString *arg_currency = GetNullableObjectAtIndex(args, 3);
        NSDictionary<NSString *, id> *arg_properties = GetNullableObjectAtIndex(args, 4);
        FlutterError *error;
        [api reportPurchaseSuccessAndroidOrder:arg_order sku:arg_sku price:arg_price currency:arg_currency properties:arg_properties error:&error];
        callback(wrapResult(nil, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:[NSString stringWithFormat:@"%@%@", @"dev.flutter.pigeon.datatower_ai_core.DTIapPigeon.reportPurchaseSuccessIos", messageChannelSuffix]
        binaryMessenger:binaryMessenger
        codec:DTDTIapPigeonGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(reportPurchaseSuccessIosOrder:sku:price:currency:seq:entrance:error:)], @"DTDTIapPigeon api (%@) doesn't respond to @selector(reportPurchaseSuccessIosOrder:sku:price:currency:seq:entrance:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_order = GetNullableObjectAtIndex(args, 0);
        NSString *arg_sku = GetNullableObjectAtIndex(args, 1);
        double arg_price = [GetNullableObjectAtIndex(args, 2) doubleValue];
        NSString *arg_currency = GetNullableObjectAtIndex(args, 3);
        NSString *arg_seq = GetNullableObjectAtIndex(args, 4);
        NSString *arg_entrance = GetNullableObjectAtIndex(args, 5);
        FlutterError *error;
        [api reportPurchaseSuccessIosOrder:arg_order sku:arg_sku price:arg_price currency:arg_currency seq:arg_seq entrance:arg_entrance error:&error];
        callback(wrapResult(nil, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
}
