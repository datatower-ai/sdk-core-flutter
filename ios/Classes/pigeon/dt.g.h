// Autogenerated from Pigeon (v18.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, DTDTLogLevel) {
  DTDTLogLevelDEBUG = 0,
  DTDTLogLevelINFO = 1,
  DTDTLogLevelWARN = 2,
  DTDTLogLevelERROR = 3,
};

/// Wrapper for DTDTLogLevel to allow for nullability.
@interface DTDTLogLevelBox : NSObject
@property(nonatomic, assign) DTDTLogLevel value;
- (instancetype)initWithValue:(DTDTLogLevel)value;
@end


/// The codec used by DTDTPigeon.
NSObject<FlutterMessageCodec> *DTDTPigeonGetCodec(void);

@protocol DTDTPigeon
- (void)initSDKAppId:(NSString *)appId url:(NSString *)url channel:(NSString *)channel isDebug:(BOOL)isDebug logLevel:(DTDTLogLevel)logLevel manualEnableUpload:(BOOL)manualEnableUpload commonProperties:(NSDictionary<NSString *, id> *)commonProperties error:(FlutterError *_Nullable *_Nonnull)error;
- (void)enableUploadWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpDTDTPigeon(id<FlutterBinaryMessenger> binaryMessenger, NSObject<DTDTPigeon> *_Nullable api);

extern void SetUpDTDTPigeonWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<DTDTPigeon> *_Nullable api, NSString *messageChannelSuffix);

NS_ASSUME_NONNULL_END
